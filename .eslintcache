[{"/Users/karen/Code/coop/project-colab/src/index.js":"1","/Users/karen/Code/coop/project-colab/src/serviceWorker.js":"2","/Users/karen/Code/coop/project-colab/src/pages/App/App.jsx":"3","/Users/karen/Code/coop/project-colab/src/services/authService.js":"4","/Users/karen/Code/coop/project-colab/src/pages/User/User.jsx":"5","/Users/karen/Code/coop/project-colab/src/pages/CreateActivity/CreateActivity.jsx":"6","/Users/karen/Code/coop/project-colab/src/pages/CreateActivity/CreateActivityRefactor.jsx":"7","/Users/karen/Code/coop/project-colab/src/pages/IndexActivities/IndexActivities.jsx":"8","/Users/karen/Code/coop/project-colab/src/pages/Login/Login.jsx":"9","/Users/karen/Code/coop/project-colab/src/pages/Landing/Landing.jsx":"10","/Users/karen/Code/coop/project-colab/src/pages/Signup/Signup.jsx":"11","/Users/karen/Code/coop/project-colab/src/pages/PreviewActivity/PreviewActivity.jsx":"12","/Users/karen/Code/coop/project-colab/src/pages/CoryTestingGround/CoryTestingGround.jsx":"13","/Users/karen/Code/coop/project-colab/src/components/NavBar/NavBar.jsx":"14","/Users/karen/Code/coop/project-colab/src/services/tokenService.js":"15","/Users/karen/Code/coop/project-colab/src/services/activityService.js":"16","/Users/karen/Code/coop/project-colab/src/services/userService.js":"17","/Users/karen/Code/coop/project-colab/src/components/SignupForm/SignupForm.jsx":"18","/Users/karen/Code/coop/project-colab/src/components/CreateQuestionForm/CreateQuestionForm.jsx":"19","/Users/karen/Code/coop/project-colab/src/components/PreQuestionForm/PreQuestionForm.jsx":"20","/Users/karen/Code/coop/project-colab/src/components/StyledComponents/FormComponents.js":"21","/Users/karen/Code/coop/project-colab/src/components/StyledComponents/ActivitiesComponents.js":"22","/Users/karen/Code/coop/project-colab/src/components/StyledComponents/NavComponents.js":"23"},{"size":663,"mtime":1607444837676,"results":"24","hashOfConfig":"25"},{"size":5086,"mtime":1607444837678,"results":"26","hashOfConfig":"25"},{"size":2826,"mtime":1607973923799,"results":"27","hashOfConfig":"25"},{"size":1186,"mtime":1607444837679,"results":"28","hashOfConfig":"25"},{"size":676,"mtime":1607562627739,"results":"29","hashOfConfig":"25"},{"size":5557,"mtime":1607562627736,"results":"30","hashOfConfig":"25"},{"size":3913,"mtime":1607562627736,"results":"31","hashOfConfig":"25"},{"size":2880,"mtime":1607562627738,"results":"32","hashOfConfig":"25"},{"size":1640,"mtime":1607444837677,"results":"33","hashOfConfig":"25"},{"size":229,"mtime":1607562627738,"results":"34","hashOfConfig":"25"},{"size":516,"mtime":1607444837678,"results":"35","hashOfConfig":"25"},{"size":3156,"mtime":1607562627739,"results":"36","hashOfConfig":"25"},{"size":5681,"mtime":1607963374033,"results":"37","hashOfConfig":"25"},{"size":894,"mtime":1607955760370,"results":"38","hashOfConfig":"25"},{"size":726,"mtime":1607444837679,"results":"39","hashOfConfig":"25"},{"size":1922,"mtime":1607963374034,"results":"40","hashOfConfig":"25"},{"size":1166,"mtime":1607963374035,"results":"41","hashOfConfig":"25"},{"size":2284,"mtime":1607444837675,"results":"42","hashOfConfig":"25"},{"size":2197,"mtime":1607444837674,"results":"43","hashOfConfig":"25"},{"size":2540,"mtime":1607562627733,"results":"44","hashOfConfig":"25"},{"size":596,"mtime":1607956779404,"results":"45","hashOfConfig":"25"},{"size":1056,"mtime":1607711764268,"results":"46","hashOfConfig":"25"},{"size":461,"mtime":1607956382415,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1hugff2",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/karen/Code/coop/project-colab/src/index.js",[],["102","103"],"/Users/karen/Code/coop/project-colab/src/serviceWorker.js",[],"/Users/karen/Code/coop/project-colab/src/pages/App/App.jsx",["104"],"/Users/karen/Code/coop/project-colab/src/services/authService.js",["105"],"import tokenService from \"./tokenService\";\n\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n \nfunction login(creds) {\n  console.log('auth service login function -- creds', creds)\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n  .then((res) => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error(\"Bad Credentials!\");\n  })\n  .then(({ token }) => \n  tokenService.setToken(token)\n  );\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n};","/Users/karen/Code/coop/project-colab/src/pages/User/User.jsx",[],"/Users/karen/Code/coop/project-colab/src/pages/CreateActivity/CreateActivity.jsx",[],"/Users/karen/Code/coop/project-colab/src/pages/CreateActivity/CreateActivityRefactor.jsx",["106","107","108","109","110"],"import React, { Component } from 'react';\nimport activityService from '../../services/activityService';\nimport styled from 'styled-components';\nimport PreQuestionForm from '../../components/PreQuestionForm/PreQuestionForm';\nimport CreateQuestionForm from '../../components/CreateQuestionForm/CreateQuestionForm';\nimport { useFormik } from 'formik';\nimport {\n  Input,\n  Form,\n  InputGroup,\n  Label,\n  Select,\n  TextArea,\n  Button,\n} from '../../components/StyledComponents/FormComponents';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst CreateActivity = () => {\n  const formik = useFormik({\n    initialValues: {\n      formData: {\n        name: '',\n        topic: '',\n        timeLimit: false,\n      },\n    },\n    onSubmit: (values) => {\n      // TODO: Submit values to api call.\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <Container>\n      <h1>Create an Activity</h1>\n      <Form onSubmit={formik.handleSubmit}>\n        <InputGroup>\n          <Label>Activity Name:</Label>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n          />\n        </InputGroup>\n        <InputGroup>\n          <Label>Activity Topic:</Label>\n          <Select\n            name=\"topic\"\n            onChange={formik.handleChange}\n            value={formik.values.topic}\n          >\n            <option value=\"Heuristics\">Heuristics</option>\n            <option value=\"Topic 1\">Topic 1</option>\n            <option value=\"Topic 2\">Topic 2</option>\n          </Select>\n        </InputGroup>\n        <InputGroup>\n          <Label>Time Limit</Label>\n          <div>\n            <Input\n              type=\"radio\"\n              name=\"timeLimit\"\n              onChange={formik.handleChange}\n              // checked={timeLimit}\n            />\n            <Label for=\"yes\">Yes</Label>\n          </div>\n          <div>\n            <Input\n              type=\"radio\"\n              name=\"timeLimit\"\n              onChange={formik.handleChange}\n              // checked={!timeLimit}\n            />\n            <Label for=\"no\">No</Label>\n          </div>\n        </InputGroup>\n        {/* // TODO: Is this item type a Question. Yes/No */}\n        <InputGroup>\n          <Label>Is this item type a Question?</Label>\n          <div>\n            <Input\n              type=\"radio\"\n              // name=\"timeLimit\"\n              onChange={formik.handleChange}\n              // checked={timeLimit}\n            />\n            <Label for=\"yes\">Yes</Label>\n          </div>\n          <div>\n            <Input\n              type=\"radio\"\n              // name=\"timeLimit\"\n              onChange={formik.handleChange}\n              // checked={!timeLimit}\n            />\n            <Label for=\"no\">No</Label>\n          </div>\n        </InputGroup>\n        {/* // TODO: If this is a question type, then render an empty question but pushing an empty question into the questions array, push an empty answer into the answers array. */}\n        <InputGroup>\n          <Label>Enter Question:</Label>\n          <TextArea\n            // name=\"problemStatement\"\n            type=\"textarea\"\n            // value={problemStatement}\n            onChange={formik.handleChange}\n          ></TextArea>\n        </InputGroup>\n        {/* // TODO: Offer a suggestion/followup if question is correct/incorrect? */}\n        <InputGroup>\n          <Label>Suggestion:</Label>\n          <TextArea\n            // name=\"suggestion\"\n            type=\"textarea\"\n            // value={suggestion}\n            onChange={formik.handleChange}\n          ></TextArea>\n        </InputGroup>\n        {/* // TODO: Map through answers array and render inputs. */}\n        \n\n        <pre>{JSON.stringify(formik.values)}</pre>\n      </Form>\n    </Container>\n  );\n};\n\nexport default CreateActivity;\n","/Users/karen/Code/coop/project-colab/src/pages/IndexActivities/IndexActivities.jsx",["111"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport activityService from '../../services/activityService';\nimport styled from 'styled-components';\nimport authService from '../../services/authService'\n\nimport {ActivityCard, SideBar, SideBarItem, SideBarLink, ActivitiesContainer, Header, Container} from '../../components/StyledComponents/ActivitiesComponents'\n\n// Index activities will be a home for all of the activities for the manager to review.\n// Filter the activities.\n// Browse the activities.\n// Assign the activity to a student.\n// Delete the activity.\n\n\n\n// const ToggleButtons = styled.div`\n//   display: flex;\n//   justify-content: flex-end;\n// `;\n\nclass IndexActivities extends Component {\n  state = {\n    activities: activityService.getAll(),\n    // listView: true,\n  };\n\n  handleDeleteActivity = async activityId => {\n    if (authService.getUser()) {\n      await activityService.deleteOne(activityId);\n      this.setState(state => ({\n        activities: state.activities.filter(l => l._id !== activityId)\n      }), () => \n      // this.props.history.push('/activities')\n      window.location.reload)\n    } else {\n      this.props.history.push('/')\n    }\n  }\n\n  async componentDidMount() {\n    const activities = await activityService.getAll();\n    this.setState({ activities: activities });\n  }\n\n  render() {\n    const { activities } = this.state;\n    return (\n      <Container>\n        <SideBar>\n          <SideBarItem>\n            <SideBarLink href=\"#\">Activity</SideBarLink>\n          </SideBarItem>\n          <SideBarItem>\n            <span>Activities</span>\n          </SideBarItem>\n          <SideBarItem>\n            <span>Results</span>\n          </SideBarItem>\n          <SideBarItem>\n            <span>Feedback</span>\n          </SideBarItem>\n        </SideBar>\n        <ActivitiesContainer>\n          <Header>\n            <h1> Activities </h1>\n          </Header>\n\n          {/* // TODO: Toggle view to list view or grid view. */}\n          {/* <ToggleButtons>\n            <button onClick={this.handleToggleView}>List View</button>\n            <button onClick={this.handleToggleView}>Grid View</button>\n          </ToggleButtons> */}\n\n          {activities.length > 0 ? (\n            activities.map((activity) => (\n              <ActivityCard>\n                {/* // TODO: Insert Image */}\n                <span>{activity.name}</span>\n                <button>Assign</button>\n                <button onClick={()=>this.handleDeleteActivity(activity._id)}>Delete</button>\n                <Link to={{ pathname: '/preview-activity', state: { activity } }}>\n                  Preview Activity\n                </Link>\n              </ActivityCard>\n            ))\n          ) : (\n            <h1>No Activities</h1>\n          )}\n        </ActivitiesContainer>\n      </Container>\n    );\n  }\n}\n\nexport default IndexActivities;\n","/Users/karen/Code/coop/project-colab/src/pages/Login/Login.jsx",[],"/Users/karen/Code/coop/project-colab/src/pages/Landing/Landing.jsx",[],"/Users/karen/Code/coop/project-colab/src/pages/Signup/Signup.jsx",[],"/Users/karen/Code/coop/project-colab/src/pages/PreviewActivity/PreviewActivity.jsx",[],"/Users/karen/Code/coop/project-colab/src/pages/CoryTestingGround/CoryTestingGround.jsx",["112","113","114","115"],"import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom'\nimport activityService from '../../services/activityService';\nimport styled from 'styled-components'\nimport authService from '../../services/authService'\nimport userService from '../../services/userService'\n// import activity from '../../../models/activity';\n\nconst ActivityCard = styled.div`\nborder: solid 2px black;\nbackground-color: white;\nalign-items: center;\nwidth: 300px;\nmargin: 10px auto;\n`;\n\nconst Container = styled.div`\nalign-items: center;\ntext-align: center;\n`\n\nclass TestingGround extends Component {\n  state = { \n      activities: activityService.getAll(),\n      users: userService.getAllUsers(),\n      user: {\n        name: \"Cory Test\",\n        email: \"jt@dog.com\",\n        password: \"abc123\",\n        assignments: [],\n        _id: \"5fc5428eed9ce66e6246e158\",\n        userPermissions: 100\n      },\n      formData: {\n        name: 'activity #9002',\n        duration: 5,\n        numberOfQuestions: 10,\n        topics: ['Heuristics'],\n        type: ['Multiple Choice'],\n        media: 'https://picsum.photos/id/1/200/300',\n        questions: [\n          {\n            problemStatement: 'This is the problem statement that I am updating',\n            suggestion: 'Here is a suggestion if you are having trouble that I am updating',\n            answers: [\n              {\n                label: 'answer #1',\n                isCorrect: false,\n              },\n              {\n                label: 'answer #2',\n                isCorrect: true,\n              },\n              {\n                label: 'answer #3',\n                isCorrect: true,\n              },\n              {\n                label: 'answer #4',\n                isCorrect: false,\n              },\n            ],\n          },\n        ],\n        isDraft: false,\n        archived: false,\n        _id: '5fc17b77171f00437b74f829'\n      },\n   } \n\n  handleTest = async () => {\n    const user = {\n      name: \"Cory Manager\",\n      email: \"cory@dog.com\",\n      password: \"1234\",\n      assignments: [],\n      _id: \"5fd251958315701726addd79\",\n      userPermissions: 100\n    }\n    const banana = await userService.updateUser(user)\n    console.log(banana)\n    const taco = await userService.getAllUsers()\n    console.log(taco)\n  }\n\n  handleGetAllUsers = async () => {\n    const allUsers = await userService.getAllUsers();\n    console.log(allUsers)\n  }\n\n\n  \n  // async componentDidMount() {\n\n  //   console.log(this.state.user)\n  //   console.log(this.state.users)\n    \n  //   const banana = {\n  //     name: \"Cory Test\",\n  //     email: \"jt@dog.com\",\n  //     password: \"abc123\",\n  //     assignments: [],\n  //     _id: \"5fc5428eed9ce66e6246e158\"\n  //   }\n  \n  //   const updatedUser = await userService.updateUser(banana)\n  //   console.log(updatedUser)\n  \n  // }\n\n  // handleUpdateUser = async updatedUserData => {\n  //   const updatedUser = await userService.updateUser(updatedUserData);\n  //   const newUsersArray = this.state.users.map(u =>\n  //     u._id === updatedUser._id? updatedUser : u);\n  //   this.setState(\n  //     { users: newUsersArray },\n  //     window.location.reload\n  //     // () => this.props.history.push('/users')\n  //   );\n  // }\n\n  // handleAddActivity = async newActivityData => {\n  //   const newactivity = await activityService.create(newActivityData);\n  //   newactivity.createdBy = { name: this.props.user.name, _id: this.props.user._id}\n  //   this.setState(state => ({\n  //     activitys: [...state.activitys, newactivity]\n  //   }), () => this.props.history.push('/activitys'));\n  // }\n\n\n  // // this can be reconnected when we link up the front end\n\n  // handleDeleteactivity = async activityId => {\n  //   if (authService.getUser()) {\n  //     await activityService.deleteOne(activityId);\n  //     this.setState(state => ({\n  //       activitys: state.activitys.filter(l => l._id !== activityId)\n  //     }), () => \n  //     // this.props.history.push('/activitys')\n  //     window.location.reload)\n  //   } else {\n  //     this.props.history.push('/')\n  //   }\n  // }\n\n  // handleUpdateActivity = async updatedActivityData => {\n  //   const updatedactivity = await activityService.update(updatedActivityData);\n  //   const newactivitiesArray = this.state.activities.map(l =>\n  //     l._id === updatedactivity._id? updatedactivity : l);\n  //   this.setState(\n  //     { activities: newactivitiesArray },\n  //     () => this.props.history.push('/activities')\n  //   );\n  // }\n  \n  render() { \n    return ( \n      <Container>\n        <button onClick={this.handleGetAllUsers}>get users</button>\n        <button onClick={this.handleTest}>upgrade user permissions</button>\n      </Container>\n    )}\n}\n \nexport default TestingGround;","/Users/karen/Code/coop/project-colab/src/components/NavBar/NavBar.jsx",[],"/Users/karen/Code/coop/project-colab/src/services/tokenService.js",["116"],"function setToken(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken,\n};","/Users/karen/Code/coop/project-colab/src/services/activityService.js",["117"],"import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/activities/';\n\nexport default {\n  create,\n  getAll,\n  deleteOne,\n  getOne,\n  update,\n};\n\n// this works cory\nexport function create(activity) {\n    console.log('create an activity')\n  return fetch(\n    BASE_URL,\n    {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': 'Bearer' + tokenService.getToken()\n      },\n      body: JSON.stringify(activity),\n    },\n    {\n      mode: 'cors',\n    }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction getAll() {\n    console.log('get all activities')\n  return fetch(\n    BASE_URL,\n    {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        //  'Authorization': 'Bearer' + tokenService.getToken()\n      },\n    },\n    { mode: 'cors' }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction deleteOne(id) {\n    console.log('delete activity')\n  return fetch(\n    `${BASE_URL}${id}`,\n    {\n      method: 'DELETE',\n      headers: { Authorization: 'Bearer ' + tokenService.getToken() },\n    },\n    { mode: 'cors' }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction getOne(activityId) {\n    console.log('one activity')\n  return fetch(\n      `${BASE_URL}${activityId}`, \n      {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n            'Authorization': 'Bearer' + tokenService.getToken()\n        },\n      },\n      {  mode: 'cors' }\n    ).then((res) => res.json());\n}\n\n// this works cory\nfunction update(activity) {\n    return fetch(\n      `${BASE_URL}${activity._id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json',\n        //   Authorization: 'Bearer ' + tokenService.getToken(),\n        },\n        body: JSON.stringify(activity),\n      },\n      { mode: 'cors' }\n    ).then((res) => res.json());\n  }\n","/Users/karen/Code/coop/project-colab/src/services/userService.js",["118"],"import tokenService from \"../services/tokenService\";\nconst BASE_URL = \"/api/users/\";\n\n// restrict access to functions on the front end\n\n// this one works cory\nfunction getAllUsers() {\n  return fetch(\n    BASE_URL,\n    {\n      headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n    },\n    { mode: \"cors\" }\n  ).then((res) => res.json());\n}\n\n// this one works cory\nfunction deleteUser(id) {\n  return fetch(`${BASE_URL}${id}`, {\n    method: 'DELETE',\n    headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, \n    {mode: \"cors\"})\n  .then(res => res.json());\n}\n\n// this one works cory\nfunction getUser(user) {\n  return fetch(`${BASE_URL}${user._id}`, {mode: \"cors\"})\n  .then(res => res.json())\n}\n\n// this one works cory\nfunction updateUser(user) {\n  console.log(user)\n  return fetch(`${BASE_URL}${user._id}`, {\n      method: \"PUT\",\n      headers: {\n        'content-type': 'application/json', \n        'Authorization': 'Bearer ' + tokenService.getToken()},\n      body: JSON.stringify(user)\n  }, {mode: \"cors\"})\n  .then(res => res.json());\n}\n\nexport default {\n  getAllUsers,\n  deleteUser,\n  getUser,\n  updateUser\n}","/Users/karen/Code/coop/project-colab/src/components/SignupForm/SignupForm.jsx",[],"/Users/karen/Code/coop/project-colab/src/components/CreateQuestionForm/CreateQuestionForm.jsx",[],"/Users/karen/Code/coop/project-colab/src/components/PreQuestionForm/PreQuestionForm.jsx",[],"/Users/karen/Code/coop/project-colab/src/components/StyledComponents/FormComponents.js",[],"/Users/karen/Code/coop/project-colab/src/components/StyledComponents/ActivitiesComponents.js",[],"/Users/karen/Code/coop/project-colab/src/components/StyledComponents/NavComponents.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":50,"column":1,"nodeType":"129","endLine":55,"endColumn":3},{"ruleId":"123","severity":1,"message":"130","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"131","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":23},{"ruleId":"123","severity":1,"message":"132","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":23},{"ruleId":"123","severity":1,"message":"133","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":26},{"ruleId":"123","severity":1,"message":"134","line":14,"column":3,"nodeType":"125","messageId":"126","endLine":14,"endColumn":9},{"ruleId":"123","severity":1,"message":"135","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"136","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":15},{"ruleId":"123","severity":1,"message":"137","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"123","severity":1,"message":"138","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":19},{"ruleId":"123","severity":1,"message":"139","line":9,"column":7,"nodeType":"125","messageId":"126","endLine":9,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":28,"column":1,"nodeType":"129","endLine":33,"endColumn":3},{"ruleId":"127","severity":1,"message":"128","line":4,"column":1,"nodeType":"129","endLine":10,"endColumn":3},{"ruleId":"127","severity":1,"message":"128","line":46,"column":1,"nodeType":"129","endLine":51,"endColumn":2},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'CreateActivity' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","'activityService' is defined but never used.","'PreQuestionForm' is defined but never used.","'CreateQuestionForm' is defined but never used.","'Button' is defined but never used.","'styled' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'authService' is defined but never used.","'ActivityCard' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]